tags:
  sptribs-ccd-stack: true

java:
  # Don't modify below here
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  environment:
    CASE_DATA_STORE_BASEURL: http://{{ .Release.Name }}-ccd-data-store-api
    CASE_DOCUMENT_AM_BASEURL: https://ccd-case-document-am-api-${SERVICE_FQDN}
    BUNDLING_API_URL: https://em-ccdorc-${SERVICE_FQDN}
    CITIZEN_UPDATE_CASE_STATE_ENABLED: true
    POSTGRES_HOST: sptribs-preview.postgres.database.azure.com
    POSTGRES_NAME: sptribs-case-api
    POSTGRES_USERNAME: hmcts
    POSTGRES_CONNECTION_OPTIONS: "?stringtype=unspecified&reWriteBatchedInserts=true&sslmode=require"
  secrets:
    POSTGRES_PASSWORD:
      secretRef: postgres
      key: PASSWORD
      disabled: false

ccd:
  ccd:
    definitionImporter:
      enabled: false
    apiGatewayWeb:
      enabled: true
    s2s:
      enabled: false
    elastic:
      enabled: true

  ingressHost: ${SERVICE_FQDN}
  ingressIP: ${INGRESS_IP}
  consulIP: ${CONSUL_LB_IP}

  global:
    idamApiUrl: https://idam-api.aat.platform.hmcts.net
    idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
    dmStoreUrl: http://dm-store-aat.service.core-compute-aat.internal
    ccdAdminWebIngress: admin-web-${SERVICE_FQDN}
    ccdApiGatewayIngress: gateway-${SERVICE_FQDN}
    postgresUsername: hmcts
    postgresSecret: postgres
    postgresHostname: sptribs-preview.postgres.database.azure.com
    s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal

  ccd-api-gateway-web:
    nodejs:
      disableKeyVaults: true
      imagePullPolicy: Always
      environment:
        ADDRESS_LOOKUP_TOKEN: ${ADDRESS_LOOKUP_TOKEN}
        IDAM_SERVICE_KEY: ${CCD_API_GATEWAY_S2S_KEY}
        IDAM_OAUTH2_CLIENT_SECRET: ${CCD_API_GATEWAY_OAUTH2_CLIENT_SECRET}
        PROXY_DOCUMENT_MANAGEMENT: http://dm-store-aat.service.core-compute-aat.internal
      ingressHost: gateway-${SERVICE_FQDN}
      ingressIP: ${INGRESS_IP}

  ccd-data-store-api:
    java:
      imagePullPolicy: Always
      environment:
        CASE_DOCUMENT_AM_API_ATTACH_DOCUMENT_ENABLED: false
        DATA_STORE_IDAM_KEY: ${DATA_STORE_S2S_KEY}
        DATA_STORE_DEFAULT_LOG_LEVEL: info
        LOG_CALLBACK_DETAILS: "*"
        DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_gw,ccd_gateway,ccd_data,aac_manage_case_assignment,xui_webapp,ccd_case_document_am_api,sptribs_frontend,sptribs_case_api,em_ccd_orchestrator
        CCD_S2S_AUTHORISED_SERVICES_CASE_USER_ROLES: aac_manage_case_assignment,fpl_case_service,finrem_case_orchestration,iac,sptribs_frontend,civil_service,sptribs_case_api
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOSTS: ${SERVICE_NAME}-es-master:9200
        ELASTIC_SEARCH_DATA_NODES_HOSTS: http://${SERVICE_NAME}-es-master:9200
        CCD_DM_DOMAIN: http://dm-store-aat.service.core-compute-aat.internal
        CCD_DOCUMENT_URL_PATTERN: ^https?://(((?:api-gateway\.preprod\.dm\.reform\.hmcts\.net|dm-store-aat\.service\.core-compute-aat\.internal(?::\d+)?)\/documents\/[A-Za-z0-9-]+(?:\/binary)?)|(em-hrs-api-aat\.service\.core-compute-aat\.internal(?::\d+)?\/hearing-recordings\/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\/segments\/[0-9]))
        CASE_DOCUMENT_AM_URL: https://ccd-case-document-am-api-${SERVICE_FQDN}
        IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET: ${IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET}
        IDAM_DATA_STORE_SYSTEM_USER_USERNAME: ${IDAM_DATA_STORE_SYSTEM_USER_USERNAME}
        IDAM_DATA_STORE_SYSTEM_USER_PASSWORD: ${IDAM_DATA_STORE_SYSTEM_USER_PASSWORD}
        ROLE_ASSIGNMENT_URL: https://am-role-assignment-${SERVICE_FQDN}
      ingressHost: ccd-data-store-api-${SERVICE_FQDN}
      autoscaling:
        enabled: false

  am-role-assignment-service:
    java:
      imagePullPolicy: Always
      image: hmctspublic.azurecr.io/am/role-assignment-service:latest
      ingressHost: am-role-assignment-${SERVICE_FQDN}
      environment:
        CCD_DATA_STORE_URL: http://{{ .Release.Name }}-ccd-data-store-api
        RUN_LD_ON_STARTUP: false
      keyVaults:
        am:
          secrets:
            - am-role-assignment-service-s2s-secret
            - app-insights-connection-string
            - role-assignment-service-IDAM-CLIENT-SECRET
            - role-assignment-service-IDAM-ADMIN-SECRET
            - role-assignment-service-LD-SDK-KEY

  ccd-definition-store-api:
    java:
      disableKeyVaults: true
      imagePullPolicy: Always
      environment:
        DEFINITION_STORE_IDAM_KEY: ${DEFINITION_STORE_S2S_KEY}
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOST: ${SERVICE_NAME}-es-master
      ingressHost: ccd-definition-store-${SERVICE_FQDN}
      autoscaling:
        enabled: false
    postgresql:
      persistence:
        enabled: false

  ccd-user-profile-api:
    java:
      disableKeyVaults: true
      imagePullPolicy: Always
      enviroment:
      ingressHost: ccd-user-profile-api-${SERVICE_FQDN}

  ccd-admin-web:
    nodejs:
      disableKeyVaults: true
      image: hmctspublic.azurecr.io/ccd/admin-web:latest
      ingressHost: admin-web-${SERVICE_FQDN}
      environment:
        IDAM_ADMIN_WEB_SERVICE_KEY: ${ADMIN_S2S_KEY}
        IDAM_OAUTH2_AW_CLIENT_SECRET: ${ADMIN_WEB_IDAM_SECRET}

  ccd-user-profile-importer:
    enabled: true
    jurisdictions:
      - ST_CIC
    users:
      - st_caseworker@mailinator.com|ST_CIC|CIC|Submitted
      - st_solicitor@mailinator.com|ST_CIC|CIC|Submitted
      - st_super@mailinator.com|ST_CIC|CIC|Submitted

  postgresql:
    enabled: false

  elasticsearch:
    nameOverride: ${SERVICE_NAME}-es
    clusterName: "es"
    replicas: 1
    initResources:
      limits:
        cpu: "500m"
        memory: "512Mi"
      requests:
        cpu: "25m"
        memory: "512Mi"
    minimumMasterNodes: 1
    antiAffinity: "soft"
    esJavaOpts: "-Xmx512m -Xms512m"
    extraEnvs:
      - name: discovery.type
        value: single-node
      - name: cluster.initial_master_nodes
        value: ""
      - name: action.auto_create_index
        value: .security*,.watches,.triggered_watches,.watcher-history-*,.logstash_dead_letter,.ml*
    persistence:
      enabled: false
    ingress:
      enabled: false
      className: traefik

  logstash:
    image: "hmctspublic.azurecr.io/imported/logstash/logstash"
    imageTag: "7.16.1"
    imagePullPolicy: "IfNotPresent"
    logstashJavaOpts: "-Xmx1g -Xms512M"
    extraInitContainers: |
      - name: download-postgres-jdbc
        image: hmctspublic.azurecr.io/curl:7.70.0
        command: ['curl', '-L', 'https://jdbc.postgresql.org/download/postgresql-42.2.18.jar', '-o', '/logstash-lib/postgresql.jar']
        volumeMounts:
        - name: logstash-lib
          mountPath: /logstash-lib
    extraVolumes: |
      - name: logstash-lib
        emptyDir: {}
      - name: database-secret-volume
        secret:
          secretName: postgres
    extraVolumeMounts: |
      - name: logstash-lib
        mountPath: /usr/share/logstash/ccd
      - name: database-secret-volume
        mountPath: /etc/logstash/secrets
        readOnly: true
    logstashConfig:
      logstash.yml: |
        http.host: 0.0.0.0
        xpack.monitoring.enabled: false
        xpack.monitoring.elasticsearch.hosts: ["http://{{ .Release.Name }}-es-master:9200"]
        queue.type: persisted
        dead_letter_queue.enable: true
      pipelines.yml: |
        - pipeline.id: main
          path.config: "/usr/share/logstash/pipeline/{01_input,02_filter,03_output}.conf"
          queue.type: persisted
    logstashPipeline:
      01_input.conf: |
        input  {
          jdbc {
            jdbc_connection_string => "jdbc:postgresql://sptribs-preview.postgres.database.azure.com:5432/data-store?stringtype=unspecified"
            jdbc_user => "hmcts"
            jdbc_password_filepath => "/etc/logstash/secrets/PASSWORD"
            jdbc_validate_connection => true
            jdbc_driver_library => "/usr/share/logstash/ccd/postgresql.jar"
            jdbc_driver_class => "org.postgresql.Driver"
            jdbc_default_timezone => "UTC"
            statement => "UPDATE case_data SET marked_by_logstash = true WHERE marked_by_logstash = false RETURNING id, created_date, last_modified, jurisdiction, case_type_id, state, last_state_modified_date, data::TEXT as json_data, data_classification::TEXT as json_data_classification, reference, security_classification, supplementary_data::TEXT as json_supplementary_data"
            clean_run => false
            schedule => "* * * * * *"
          }
        }
      02_filter.conf: |
        filter{
          json{
              source => "json_data"
              target => "data"
              remove_field => ["json_data"]
              }
              json{
                  source => "json_supplementary_data"
                  target => "supplementary_data"
                  remove_field => ["json_supplementary_data"]
              }
              json{
                  source => "json_data_classification"
                  target => "data_classification"
                  remove_field => ["json_data_classification"]
              }
              if [data][SearchCriteria] {
                  clone {
                      clones => ["SearchCriteria"]
                  }
              }
              if [type] == "SearchCriteria" {
                  if [data][SearchCriteria] {
                      mutate {
                        rename => {"[data][SearchCriteria]" => "[data_new][SearchCriteria]" }
                      }
                  }
                  if [data][caseManagementLocation] {
                      mutate {
                        rename => {"[data][caseManagementLocation]" => "[data_new][caseManagementLocation]" }
                      }
                  }
                  if [data][CaseAccessCategory] {
                    mutate {
                        rename => {"[data][CaseAccessCategory]" => "[data_new][CaseAccessCategory]" }
                    }
                  }
                  if [data][caseNameHmctsInternal] {
                      mutate {
                        rename => {"[data][caseNameHmctsInternal]" => "[data_new][caseNameHmctsInternal]" }
                      }
                  }
                  if [data][caseManagementCategory] {
                      mutate {
                        rename => {"[data][caseManagementCategory]" => "[data_new][caseManagementCategory]" }
                      }
                  }
                  if [supplementary_data][HMCTSServiceId] {
                      mutate {
                        rename => {"[supplementary_data][HMCTSServiceId]" => "[supplementary_data_new][HMCTSServiceId]" }
                      }
                  }
                  if [data_classification][SearchCriteria] {
                      mutate {
                        rename => {"[data_classification][SearchCriteria]" => "[data_classification_new][SearchCriteria]" }
                      }
                  }
                  if [data_classification][CaseAccessCategory] {
                    mutate {
                          rename => {"[data_classification][CaseAccessCategory]" => "[data_classification_new][CaseAccessCategory]" }
                    }
                  }
                  if [data_classification][caseManagementLocation] {
                    mutate {
                        rename => {"[data_classification][caseManagementLocation]" => "[data_classification_new][caseManagementLocation]" }
                    }
                  }
                  if [data_classification][caseNameHmctsInternal] {
                      mutate {
                        rename => {"[data_classification][caseNameHmctsInternal]" => "[data_classification_new][caseNameHmctsInternal]" }
                      }
                  }
                  if [data_classification][caseManagementCategory] {
                      mutate {
                        rename => {"[data_classification][caseManagementCategory]" => "[data_classification_new][caseManagementCategory]" }
                      }
                  }
                  mutate { remove_field =>[ "data" ,"supplementary_data", "data_classification", "last_state_modified_date", "type","last_modified", "created_date" ] }
                  mutate {
                          rename => { "[data_new]" => "data" }
                          rename => { "[supplementary_data_new]"  => "supplementary_data" }
                          rename => { "[data_classification_new]"  => "data_classification" }
                  }
                  mutate {
                    add_field => { "index_id" => "global_search" }
                  }
                  mutate {
                    lowercase => [ "index_id" ]
                  }
              } else {
                  mutate {
                      add_field => { "index_id" => "%{case_type_id}_cases" }
                }
              mutate {
                lowercase => [ "index_id" ]
              }
              }
        }
      03_output.conf: |
        output {
            elasticsearch {
                hosts => ["http://{{ .Release.Name }}-es-master:9200"]
                sniffing => false
                index => "%{[index_id]}"
                document_type => "_doc"
                document_id => "%{id}"
                timeout => 60
            }
        }

ccd-case-document-am-api:
  enabled: true
  java:
    releaseNameOverride: ${SERVICE_NAME}-ccd-case-document-am-api
    imagePullPolicy: Always
    image: hmctspublic.azurecr.io/ccd/case-document-am-api:latest
    ingressHost: ccd-case-document-am-api-${SERVICE_FQDN}
    environment:
      CCD_DATA_STORE_API_BASE_URL: http://{{ .Release.Name }}-ccd-data-store-api
    autoscaling:
      enabled: false

xui-webapp:
  enabled: true
  nodejs:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-webapp
    image: hmctspublic.azurecr.io/xui/webapp:pr-3206
    ingressHost: xui-${SERVICE_FQDN}
    devcpuRequests: 250m
    devmemoryRequests: 1024Mi
    devmemoryLimits: 1024Mi
    environment:
      SERVICES_CCD_COMPONENT_API: http://{{ .Release.Name }}-ccd-api-gw
      SERVICES_CCD_DATA_STORE_API: http://{{ .Release.Name }}-ccd-data-store-api
      SERVICES_DOCUMENTS_API_V2: https://ccd-case-document-am-api-${SERVICE_FQDN}
      SERVICES_CCD_CASE_ASSIGNMENT_API: http://{{ .Release.Name }}-aac-manage-case-assignment
      JURISDICTIONS: ST_CIC,ST_CS,ST_MH,ST_PHL,ST_SEN,ST_DD
      CASE_TYPES: CIC,CS,MH,PHL,SEN,DD
      WA_SUPPORTED_JURISDICTIONS: ST_CIC
      SERVICES_WORK_ALLOCATION_TASK_API: http://{{ .Release.Name }}-wa-task-management-api
      SERVICES_WA_WORKFLOW_API_URL: http://{{ .Release.Name }}-wa-workflow-api
      FEATURE_REDIS_ENABLED: false
      FEATURE_WORKALLOCATION_ENABLED: true
      FEATURE_ACCESS_MANAGEMENT_ENABLED: true
      FEATURE_SUBSTANTIVE_ROLE_ENABLED: true
      FEATURE_APP_INSIGHTS_ENABLED: true
      NODE_OPTIONS: --max-old-space-size=900
      HEALTH_ROLE_ASSIGNMENT_API: https://am-role-assignment-${SERVICE_FQDN}
      SERVICES_ROLE_ASSIGNMENT_API: https://am-role-assignment-${SERVICE_FQDN}
      SERVICES_ROLE_ASSIGNMENT_MAPPING_API: https://am-org-role-mapping-service-${SERVICE_FQDN}
      SERVICES_CASE_CASEWORKER_API: http://rd-caseworker-ref-api-aat.service.core-compute-aat.internal
xui-mo-webapp:
  enabled: true
  nodejs:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-mo-webapp
    image: hmctspublic.azurecr.io/xui/mo-webapp:latest
    ingressHost: xui-mo-${SERVICE_FQDN}
    environment:
      MANAGE_CASE_LINK: https://xui-${SERVICE_FQDN}/cases
      MANAGE_ORG_LINK: https://xui-mo-${SERVICE_FQDN}
      SERVICES_CCD_DATA_STORE_API: http://{{ .Release.Name }}-ccd-data-store-api
      SERVICES_MCA_PROXY_API: http://aac-${SERVICE_FQDN}
      JURISDICTIONS: ST_CIC,ST_CS,ST_MH,ST_PHL,ST_SEN,ST_DD
      CASE_TYPES: CIC,CS,MH,PHL,SEN,DD
      SERVICES_ROLE_ASSIGNMENT_API: https://am-role-assignment-${SERVICE_FQDN}

sptribs-frontend:
  enabled: true
  nodejs:
    registerAdditionalDns:
      enabled: false
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-frontend
    image: hmctspublic.azurecr.io/sptribs/frontend:latest #pr-xxxx
    ingressHost: frontend-${SERVICE_FQDN}
    environment:
      CCD_URL: http://{{ .Release.Name }}-ccd-data-store-api
      SKIP_DIV_CASE_CHECK: true

aac-manage-case-assignment:
  enabled: true
  java:
    disableKeyVaults: true
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-aac-manage-case-assignment
    image: hmctspublic.azurecr.io/aac/manage-case-assignment:latest
    ingressHost: aac-${SERVICE_FQDN}
    environment:
      IDAM_API_URL: https://idam-api.aat.platform.hmcts.net
      IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
      OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts
      S2S_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
      MCA_DS_PROXY_URLS_ALLOWED_LIST: /searchCases.*,/internal/searchCases.*,/internal/cases.*
      MCA_DEF_STORE_PROXY_URLS_ALLOWED_LIST: /api/display/challenge-questions.*
      MANAGE_CASE_S2S_AUTHORISED_SERVICES: xui_webapp,ccd_data,fpl_case_service,sptribs_frontend,sptribs_ccd_submission,finrem_case_orchestration
      CCD_DATA_STORE_API_BASE_URL: http://{{ .Release.Name }}-ccd-data-store-api
      CCD_DEFINITION_STORE_API_BASE_URL: http://${SERVICE_NAME}-ccd-definition-store-api
      PRD_HOST: http://rd-professional-api-aat.service.core-compute-aat.internal
      ROLE_ASSIGNMENT_URL: https://am-role-assignment-${SERVICE_FQDN}
    autoscaling:
      enabled: false

idam-pr:
  enabled: true
  releaseNameOverride: ${SERVICE_NAME}-idam-pr
  redirect_uris:
    XUI:
      - https://xui-${SERVICE_FQDN}/oauth2/callback
    XUIMO:
      - https://xui-mo-${SERVICE_FQDN}/oauth2/callback

em-ccdorc:
  enabled: true
  java:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-em-ccdorc
    image: hmctspublic.azurecr.io/em/ccdorc:latest
    ingressHost: em-ccdorc-${SERVICE_FQDN}
    environment:
      IDAM_API_BASE_URI: https://idam-api.aat.platform.hmcts.net
      OPEN_ID_API_BASE_URI: https://idam-web-public.aat.platform.hmcts.net/o
      S2S_BASE_URI: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
      EM_STITCHING_API_URL: https://em-stitching-${SERVICE_FQDN}
      DM_STORE_APP_URL: http://dm-store-aat.service.core-compute-aat.internal
      CCD_DATA_API_URL: https://ccd-data-store-api-${SERVICE_FQDN}
      CALLBACK_DOMAIN: em-ccdorc-${SERVICE_FQDN}
      CALLBACK_HTTP_SCHEME: https

em-stitching:
  enabled: true
  java:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-em-stitching
    image: hmctspublic.azurecr.io/em/stitching:latest
    ingressHost: em-stitching-${SERVICE_FQDN}
    environment:
      CDAM_URL: https://ccd-case-document-am-api-${SERVICE_FQDN}
      SPRING_DATASOURCE_HOST: sptribs-preview.postgres.database.azure.com
      SPRING_DATASOURCE_USERNAME: hmcts
      SPRING_DATASOURCE_NAME: emstitch
      SPRING_DATASOURCE_PORT: 5432
      SPRING_DATASOURCE_OPTIONS: "?stringtype=unspecified&reWriteBatchedInserts=true&sslmode=require"
      ENABLE_DB_MIGRATE: true
      RUN_DB_MIGRATION_ON_STARTUP: true
      FLYWAY_POSTGRESQL_TRANSACTIONAL_LOCK: false
    secrets:
      SPRING_DATASOURCE_PASSWORD:
        secretRef: postgres
        key: PASSWORD
        disabled: false

wa:
  enabled: true
  global:
    postgresUsername: hmcts
    postgresSecret: postgres
    postgresHost: sptribs-preview.postgres.database.azure.com
  wa-initiation-batch:
    job:
      releaseNameOverride: "{{ .Release.Name }}-wa-task-batch"
  wa-reconfiguration-batch:
    job:
      releaseNameOverride: "{{ .Release.Name }}-reconfiguration-batch"
  wa-termination-batch:
    job:
      releaseNameOverride: "{{ .Release.Name }}-termination-batch"
  wa-message-cron-service:
    job:
      releaseNameOverride: "{{ .Release.Name }}-wa-message-cron"

  camunda-bpm:
    java:
      environment:
        CAMUNDA_DB_CONN_OPTIONS: "?stringtype=unspecified&reWriteBatchedInserts=true&sslmode=require"

  wa-task-management-api:
    java:
      ingressHost: wa-task-management-api-${SERVICE_FQDN}
      environment:
        CAMUNDA_URL: "http://{{ .Release.Name }}-camunda/engine-rest"
        IDAM_URL: "https://idam-api.{{ .Values.global.environment }}.platform.hmcts.net"
        S2S_URL: "http://rpe-service-auth-provider-{{ .Values.global.environment }}.service.core-compute-{{ .Values.global.environment }}.internal"
        OPEN_ID_IDAM_URL: "https://idam-web-public.{{ .Values.global.environment }}.platform.hmcts.net"
        ROLE_ASSIGNMENT_URL: https://am-role-assignment-${SERVICE_FQDN}
        ALLOWED_JURISDICTIONS: ST_CIC
        ALLOWED_CASE_TYPES: criminalinjuriescompensation

  wa-case-event-handler:
    java:
      ingressHost: wa-case-event-handler-${SERVICE_FQDN}
      releaseNameOverride: ${SERVICE_NAME}-wa-case-event-handler
      secrets:
        AZURE_SERVICE_BUS_CONNECTION_STRING:
          secretRef: sptribs-sb-preview
          key: connectionString
      environment:
        CAMUNDA_URL: "http://{{ .Release.Name }}-camunda/engine-rest"
        CCD_URL: "http://{{ .Release.Name }}-ccd-data-store-api"
        CCD_SEARCH_URL: "http://{{ .Release.Name }}-ccd-data-store-api"
        ROLE_ASSIGNMENT_URL: https://am-role-assignment-${SERVICE_FQDN}
        WA_WORKFLOW_API_URL: "http://{{ .Release.Name }}-wa-workflow-api"
        WA_TASK_MANAGEMENT_API_URL: "http://{{ .Release.Name }}-wa-task-management-api"
        AZURE_SERVICE_BUS_TOPIC_NAME: ${SERVICE_NAME}-ccd-case-events
        AZURE_SERVICE_BUS_SUBSCRIPTION_NAME: ${SERVICE_NAME}-ccd-case-events
        AZURE_SERVICE_BUS_CCD_CASE_EVENTS_SUBSCRIPTION_NAME: ${SERVICE_NAME}-ccd-case-events
  wa-task-monitor:
    java:
      ingressHost: wa-task-monitor-${SERVICE_FQDN}
      environment:
        WA_TASK_MANAGEMENT_API_URL: http://{{ .Release.Name }}-wa-task-management-api
  wa:
    postgresql:
      enabled: false

servicebus:
  enabled: true
  releaseNameOverride: ${SERVICE_NAME}
  resourceGroup: sptribs-aso-preview-rg
  sbNamespace: sptribs-servicebus-preview
  setup:
    topics:
      - name: ccd-case-events
        subscriptionNeeded: yes
        requiresSession: true
      - name: crd-topic
        subscriptionNeeded: yes
      - name: jrd-topic
        subscriptionNeeded: yes

ccd-message-publisher:
  enabled: true
  servicebus:
    enabled: false
  java:
    ingressHost: ccd-message-publisher-${SERVICE_FQDN}
    releaseNameOverride: ${SERVICE_NAME}-ccd-message-publisher
    keyVaults:
      ccd:
        secrets:
          - name: AppInsightsInstrumentationKey
            alias: azure.application-insights.instrumentation-key
    environment:
      DATA_STORE_DB_HOST: "{{ .Release.Name }}-postgresql"
      DATA_STORE_DB_NAME: data-store
      DATA_STORE_DB_USERNAME: hmcts
      DATA_STORE_DB_PASSWORD: hmcts
      DATA_STORE_DB_OPTIONS: "?stringtype=unspecified"
      CCD_CASE_EVENTS_DESTINATION: ${SERVICE_NAME}-ccd-case-events
    secrets:
      SERVICE_BUS_CONNECTION_STRING:
        secretRef: sptribs-sb-preview
        key: connectionString

am-org-role-mapping-service:
  enabled: true
  java:
    image: 'hmctspublic.azurecr.io/am/org-role-mapping-service:pr-1583'
    ingressHost: am-org-role-mapping-service-${SERVICE_FQDN}
    releaseNameOverride: ${SERVICE_NAME}-am-org-role-mapping-service
    devmemoryRequests: 1024Mi
    devcpuRequests: 250m
    devmemoryLimits: 2048Mi
    devcpuLimits: 1500m
    secrets:
      SB_ACCESS_KEY:
        secretRef: sptribs-sb-preview
        key: primaryKey
      SB_CONNECTION_STRING:
        secretRef: sptribs-sb-preview
        key: connectionString
      ORG_ROLE_MAPPING_DB_PASSWORD:
        secretRef: postgres
        key: PASSWORD
        disabled: false
    keyVaults:
      am:
        secrets:
          - app-insights-connection-string
          - am-org-role-mapping-service-s2s-secret
          - role-assignment-service-LD-SDK-KEY
          - orm-IDAM-CLIENT-ID
          - orm-IDAM-CLIENT-SECRET
          - orm-IDAM-ADMIN-SECRET
    environment:
      CASE_WORKER_REF_APP_URL: https://rd-caseworker-ref-api-${SERVICE_FQDN}
      ROLE_ASSIGNMENT_APP_URL: https://am-role-assignment-${SERVICE_FQDN}
      LAUNCH_DARKLY_ENV: pr
      AMQP_SHARED_ACCESS_KEY_NAME: RootManageSharedAccessKey
      AMQP_HOST: "sptribs-sb-preview.servicebus.windows.net"
      CRD_SUBSCRIPTION_NAME: "{{ .Release.Name}}-crd-topic"
      JRD_SUBSCRIPTION_NAME: "{{ .Release.Name}}-jrd-topic"
      CRD_TOPIC_NAME: "{{ .Release.Name}}-crd-topic"
      JRD_TOPIC_NAME: "{{ .Release.Name}}-jrd-topic"
      AMQP_CRD_SHARED_ACCESS_KEY_VALUE: "$(SB_ACCESS_KEY)"
      AMQP_JRD_SHARED_ACCESS_KEY_VALUE: "$(SB_ACCESS_KEY)"
      ORG_ROLE_MAPPING_DB_HOST: sptribs-preview.postgres.database.azure.com
      ORG_ROLE_MAPPING_DB_NAME: org_role_mapping
      ORG_ROLE_MAPPING_DB_USERNAME: hmcts
      ORG_ROLE_MAPPING_DB_PORT: 5432
      ORG_ROLE_MAPPING_DB_OPTIONS: "?stringtype=unspecified&reWriteBatchedInserts=true&sslmode=require"
      RUN_LD_ON_STARTUP: true

rd-caseworker-ref-api:
  enabled: true
  java:
    image: 'hmctspublic.azurecr.io/rd/caseworker-ref-api:latest'
    ingressHost: rd-caseworker-ref-api-${SERVICE_FQDN}
    releaseNameOverride: ${SERVICE_NAME}-rd-caseworker-ref-api
    secrets:
      CWRD_MQ_PASSWORD:
        secretRef: sptribs-sb-preview
        key: primaryKey
      POSTGRES_PASSWORD:
        secretRef: postgres
        key: PASSWORD
        disabled: false
    environment:
      POSTGRES_HOST: sptribs-preview.postgres.database.azure.com
      POSTGRES_DB_NAME: dbrdcaseworker
      POSTGRES_USERNAME: hmcts
      POSTGRES_PORT: 5432
      POSTGRES_CONNECTION_OPTIONS: "?currentSchema=dbrdcaseworker&stringtype=unspecified&reWriteBatchedInserts=true&sslmode=require"
      CWRD_MQ_HOST: "sptribs-sb-preview.servicebus.windows.net"
      CASEWORKER_TOPIC_PRIMARY_SEND_LISTEN_SHARED_ACCESS_KEY: "$(CWRD_MQ_PASSWORD)"
      CWRD_MQ_USERNAME: RootManageSharedAccessKey
      CWRD_MQ_TOPIC_NAME: "{{ .Release.Name}}-crd-topic"
      CWRD_MQ_TRUST_ALL_CERTS: false
      CWRD_DATA_PER_MESSAGE: 50
      LAUNCH_DARKLY_ENV: "preview"
      ENVIRONMENT_NAME: "preview"
      EMAIL_DOMAIN_LIST: "justice.gov.uk,dwp.gov.uk,hmrc.gov.uk,hmcts.net,dfcni.gov.uk"

postgresql:
  enabled: true
  flexibleserver: sptribs-preview
  setup:
    databases:
      - name: data-store
      - name: definition-store
      - name: user-profile
      - name: draftstore
      - name: evidence
      - name: annotation
      - name: role-assignment
      - name: hmc-cft-hearing-service
      - name: cft_task_db
      - name: wa-case-event-handler
      - name: wa_workflow_api
      - name: camunda
      - name: org_role_mapping
      - name: sptribs-case-api
      - name: emstitch
      - name: payment
      - name: dbrdcaseworker
